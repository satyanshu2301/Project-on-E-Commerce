[{"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\index.js":"1","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\App.js":"2","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Navigation\\Navigationbar.jsx":"4","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Navigation\\styles.js":"5","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\styles.js":"6","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\library\\commerce.js":"7","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\Cart.jsx":"8","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\styles.js":"9","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\cartItem\\CartItem.jsx":"10","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\cartItem\\styles.js":"11","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\Product\\Product.jsx":"12","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\Product\\styles.js":"13","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\PlaceOrder.jsx":"14","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\styles.js":"15","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\Address.jsx":"16","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\Payment.jsx":"17","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\TextFieldForm.jsx":"18","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\Summary.jsx":"19"},{"size":151,"mtime":1611482790569,"results":"20","hashOfConfig":"21"},{"size":3197,"mtime":1622907176487,"results":"22","hashOfConfig":"21"},{"size":734,"mtime":1611816139250,"results":"23","hashOfConfig":"21"},{"size":1459,"mtime":1611941333079,"results":"24","hashOfConfig":"21"},{"size":1892,"mtime":1611941390860,"results":"25","hashOfConfig":"21"},{"size":326,"mtime":1611598593367,"results":"26","hashOfConfig":"21"},{"size":129,"mtime":1611565486674,"results":"27","hashOfConfig":"21"},{"size":2030,"mtime":1611745385313,"results":"28","hashOfConfig":"21"},{"size":597,"mtime":1611669534487,"results":"29","hashOfConfig":"21"},{"size":1441,"mtime":1611861607303,"results":"30","hashOfConfig":"21"},{"size":389,"mtime":1611672492994,"results":"31","hashOfConfig":"21"},{"size":1340,"mtime":1623947336319,"results":"32","hashOfConfig":"21"},{"size":440,"mtime":1611598615675,"results":"33","hashOfConfig":"21"},{"size":3927,"mtime":1622910065297,"results":"34","hashOfConfig":"21"},{"size":1381,"mtime":1611946421755,"results":"35","hashOfConfig":"21"},{"size":5819,"mtime":1622907559235,"results":"36","hashOfConfig":"21"},{"size":3087,"mtime":1622893256234,"results":"37","hashOfConfig":"21"},{"size":673,"mtime":1611942307255,"results":"38","hashOfConfig":"21"},{"size":1029,"mtime":1611925078125,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1i52yj3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\index.js",[],["81","82"],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\App.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Navigation\\Navigationbar.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Navigation\\styles.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\styles.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\library\\commerce.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\styles.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\cartItem\\CartItem.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Cart\\cartItem\\styles.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\PlaceOrder.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\styles.js",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\Address.jsx",["83","84"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport TextFieldForm from './TextFieldForm';\r\nimport { Link } from 'react-router-dom';\r\nimport { commerce } from '../../../library/commerce';\r\n\r\nconst Address = ({ checkoutToken, Continue }) => {\r\n    \r\n    const methods = useForm();\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }));\r\n    \r\n    \r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n        \r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);        \r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => Continue({ ...data, shippingCountry, shippingSubdivision,shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <TextFieldForm name='firstName' label='First Name' />\r\n                        <TextFieldForm name='lastName' label='Last Name' />\r\n                        <TextFieldForm name='address1' label='Locality/Landmark' />\r\n                        <TextFieldForm name='address2' label='House/flat no./Street' />\r\n                        <TextFieldForm name='address3' label='District' />\r\n                        <TextFieldForm name='pincode' label='Pin-Code' />\r\n                        <TextFieldForm name='contacts' label='Mobile no./Telephone no.' />\r\n                        <TextFieldForm name='email' label='Email Id' />\r\n                        \r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}>\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))}   \r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                        {subdivision.label}\r\n                                 </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Option</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e)=>setShippingOption(e.target.value) }>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                            </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\" color=\"primary\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Continue</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Address;","C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\Payment.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\TextFieldForm.jsx",[],"C:\\Users\\satya\\OneDrive\\Desktop\\Major\\my-reactapp\\src\\components\\PlaceOrder\\OrderSummary\\Summary.jsx",[],["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":47,"column":8,"nodeType":"93","endLine":47,"endColumn":10,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":55,"column":8,"nodeType":"93","endLine":55,"endColumn":29,"suggestions":"96"},{"ruleId":"87","replacedBy":"97"},{"ruleId":"89","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["102"],["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"107","text":"108"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"109","text":"110"},[2152,2154],"[checkoutToken.id]",[2429,2450],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]